#!/usr/bin/env bash
set -euo pipefail

if [[ $# -lt 1 ]]; then
  echo "Usage: $0 <relative-path-to-nix-file>" >&2
  exit 1
fi

# detect real flake root
ROOT_DIR=$(cd "$(dirname "$0")/.." && pwd)
TARGET_INPUT=$1
CACHE_URL="s3://abex-nix-cache?region=ap-northeast-1"

if [[ "$TARGET_INPUT" = /* ]]; then
  TARGET_PATH="$TARGET_INPUT"
else
  TARGET_PATH="$ROOT_DIR/$TARGET_INPUT"
fi

if [[ ! -f "$TARGET_PATH" ]]; then
  echo "Target file not found: $TARGET_PATH" >&2
  exit 1
fi

# find flake root (the directory that actually contains flake.nix)
FLAKE_ROOT="$ROOT_DIR"
if [[ ! -f "$FLAKE_ROOT/flake.nix" ]]; then
  # try parent
  FLAKE_ROOT=$(cd "$FLAKE_ROOT/.." && pwd)
fi

if [[ ! -f "$FLAKE_ROOT/flake.nix" ]]; then
  echo "Could not find flake.nix in or above $ROOT_DIR" >&2
  exit 1
fi

BUILD_EXPR=$(cat <<EXPR
let
  flake = builtins.getFlake (toString ${FLAKE_ROOT});
  pkgs = import flake.inputs.nixpkgs {
    system = builtins.currentSystem;
    overlays = flake.overlays;
    config.allowUnfree = true;
  };
in pkgs.callPackage ${TARGET_PATH} {}
EXPR
)

echo "[1/3] Building derivation from ${TARGET_PATH}"
OUT_PATH=$(nix build --extra-experimental-features 'nix-command flakes' \
  --impure --expr "$BUILD_EXPR" --print-out-paths)

echo "[2/3] Build done: $OUT_PATH"

if [[ -n "$CACHE_URL" ]]; then
  echo "[3/3] Uploading to cache: $CACHE_URL"
  nix copy --to "$CACHE_URL" "$OUT_PATH"
  echo "Upload complete."
else
  echo "No cache URL provided; skipping upload."
fi
