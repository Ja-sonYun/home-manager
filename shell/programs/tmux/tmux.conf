set -g @menus_trigger 'b'

set-option -sg escape-time 30

is_vim="ps -o stat -p $(pstree -p #{pane_pid} | awk '/neovim/  { printf \"%s,\", $2 }' | sed 's/,$//') | grep -q 'S+'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

# panes
set -g pane-border-style 'bg=colour0 fg=color231'
set -g pane-active-border-style 'bg=colour0 fg=color231'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

set -g history-limit 50000
set -g default-terminal "tmux-256color"
set -g allow-passthrough on
set -g set-clipboard on

set -ga terminal-features ",xterm-256color:RGB"
set -ga terminal-overrides ",xterm-256color:Tc"

set-option -g focus-events on

bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

set -g prefix C-q
bind -n S-left select-pane -L
bind -n S-down select-pane -D
bind -n S-up select-pane -U
bind -n S-right select-pane -R
unbind-key -T prefix C-o
bind E setw synchronize-panes \; display "synchronize-panes #{?pane_synchronized,on,off}"
bind-key -T copy-mode-vi v send -X begin-selection
setw -g mode-keys vi
set-window-option -g mode-keys vi

#macos
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

unbind-key -T prefix C-f
unbind-key -T prefix C-e
unbind-key -T prefix C-t
unbind-key -T prefix C-r
unbind-key -T prefix o

# tmux-menu
bind-key -n C-c run-shell "$TMUX_CONFIG/scripts/tmux-key-handler.sh nC-c"
bind-key    C-c run-shell "$TMUX_CONFIG/scripts/tmux-key-handler.sh C-c"
bind-key    w   run-shell "$TMUX_CONFIG/scripts/tmux-key-handler.sh w"
bind-key    s   run-shell "$TMUX_CONFIG/scripts/tmux-key-handler.sh s"

bind-key    c   run-shell "$TMUX_CONFIG/scripts/tmux-key-handler.sh c"
bind-key    n   run-shell "$TMUX_CONFIG/scripts/tmux-key-handler.sh n"
bind-key    p   run-shell "$TMUX_CONFIG/scripts/tmux-key-handler.sh p"
bind-key    %   run-shell "$TMUX_CONFIG/scripts/tmux-key-handler.sh %"
bind-key    '"' run-shell "$TMUX_CONFIG/scripts/tmux-key-handler.sh '\"'"
bind-key    !   run-shell "$TMUX_CONFIG/scripts/tmux-key-handler.sh !"
bind-key    k   run-shell "$TMUX_CONFIG/scripts/tmux-key-handler.sh k"

# Show popup only from main session
bind-key f      if-shell '! tmux show-environment MAIN >/dev/null 2>&1'             'detach'             'run-shell "$TMUX_CONFIG/scripts/popup-tmux.sh top"'
bind-key C-f    if-shell '! tmux show-environment MAIN >/dev/null 2>&1'             'detach'             'run-shell "$TMUX_CONFIG/scripts/popup-tmux.sh bottom"'
bind-key C-r    if-shell '! tmux show-environment MAIN >/dev/null 2>&1'             'detach'             'run-shell "$TMUX_CONFIG/scripts/swap.sh"'

# Cannot detach on default sessions
bind-key d      run-shell "$TMUX_CONFIG/scripts/tmux-key-handler.sh d"

bind-key B display-message '#{cursor_x} #{cursor_y}'

# reload config
bind R source-file ~/.tmux.conf \; display-message "Tmux configuration reloaded."

# =============================================================================================================
# Status bar
# =============================================================================================================
set -g status-bg "#FFFFFF"
set -g status-keys vi
set -g status-interval 10

set-option -g status-position top
set-option -g status-left-length 50
set-option -g status-right-length 120

# set-option -g status-justify center
set-option -g status-right "#(cd #{pane_current_path};$TMUX_CONFIG/scripts/tmux_status_right)"
set-option -g status-left "#(cd #{pane_current_path};$TMUX_CONFIG/scripts/tmux_status_left)"
set-option -g status on

set-window-option -g window-status-format "#I:#W"
set-window-option -g window-status-current-format "#[fg=white]#[bg=green]▌#[default]#[bg=green]#I:#W#[default]#[fg=white]#[bg=green]▐#[default]"

set-environment -g 'IGNOREEOF' 10

unbind-key -T prefix Space
unbind-key -T prefix '&'
unbind-key -T prefix X
unbind-key '$'

bind-key -T prefix '&' next-layout
# x for kill-pane
# X for kill-window
bind-key -T prefix X kill-window
