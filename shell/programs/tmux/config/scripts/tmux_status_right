#!/usr/bin/env zsh

set -o shwordsplit

buf=""
function shorten-pwd {
    # Replace the home directory with ~ and split the path into an array using / as the delimiter
    local -a path_parts
    path_parts=("${(@s:/:)${PWD/#$HOME/~}}")

    # Process each element
    for i in {1..$#path_parts}; do
        # Skip the home directory (~), empty elements, and the last element
        if [[ $path_parts[i] != "~" ]] && [[ -n $path_parts[i] ]] && (( i < $#path_parts )); then
            # Abbreviate the element to the first three characters and add ' '
            path_parts[i]=${path_parts[i][1,3]}…
        fi
    done

    # Join the elements back into a string
    local new_path="${(j:/:)path_parts}"
    echo "$new_path"
}

function shorten-string {
    maxlen="$1"
    shift
    str="$@"

    # If the string length is less than or equal to maxlen, return the string as is
    if (( ${#str} <= maxlen )); then
        echo "$str"
        exit 0
    fi

    # Calculate the length to keep at the end of the string
    end_len=$((maxlen / 2))

    # Ensure that the total length is not more than maxlen
    start_len=$((maxlen - end_len - 1))

    echo "${str:0:$start_len}…${str: -end_len}"
}

messages_dir="/tmp/tmux_status_messages"
mkdir -p -- "$messages_dir"

typeset -a files msgs
files=(${messages_dir}/*(N))     # (N) nullglob: no-match -> empty

if (( ${#files} > 0 )); then
    for f in "${(on)files[@]}"; do
        line="$(tail -n 1 "$f" 2>/dev/null)"
        [[ -n "$line" ]] && msgs+=("$line")
    done

    # Join with separator
    message="${(j: | :)msgs}"
else
    message=""
fi

# if current project is child of git project, show git branch
is_git=$(git rev-parse --is-inside-work-tree)

if [[ $is_git == "true" ]]; then
    FOLDER_NAME=$(basename $(git rev-parse --show-toplevel))
    GIT_BRANCH=$(shorten-string 20 $(git branch --show-current))
    buf="#[fg=red]${GIT_BRANCH}#[fg=default]"
    buf="#[fg=red]Git#[fg=default]($buf):"

    window_name="$FOLDER_NAME"
else
    window_name="$(basename $PWD)"
fi

session_name=$(tmux display-message -p '#S')
if [[ "$session_name" == "main" || "$session_name" == "popup" ]]; then
    if [[ -n "$window_name" ]]; then
        current_window_name=$(tmux display-message -p '#W')
        if [[ "$current_window_name" != "$window_name" ]]; then
            tmux rename-window "$window_name"
        fi
    fi
fi

PWD=$(shorten-pwd)
buf="${message} - ${buf}${PWD}"

echo "${buf}"
